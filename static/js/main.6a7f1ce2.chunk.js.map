{"version":3,"sources":["Components/EmployeeWithBirthday/styles.module.css","styles/Employees.module.css","Components/Employee/styles.module.css","Components/EmployeesBirthdayByMonth/styles.module.css","Components/EmployeesGroupedByAlphabet/styles.module.css","Components/Employee/index.js","Components/EmployeesGroupedByAlphabet/index.js","Components/EmployeeWithBirthday/index.js","Components/EmployeesBirthdayByMonth/index.js","Pages/Employees.jsx","utils/localStorage.js","App.js","index.js"],"names":["module","exports","Employee","employee","activeEmployees","handleRadioButton","radioEnum","className","styles","employeeName","includes","id","activeEmployee","notActiveEmployee","firstName","lastName","radioWrapper","radioLabel","type","name","value","notActive","checked","onChange","active","radioSpan","EmployeesGroupedByAlphabet","letters","isLoading","employeesData","employeesSection","employeesTitle","employeesContainer","map","letter","length","noEmployees","EmployeeWithBirthday","months","dob","getDate","find","m","index","getMonth","title","getFullYear","EmployeesBirthdayByMonth","employeesBirthdayData","employeesBirthdaySection","employeesBirthdayTitle","listOfMonth","month","monthItem","monthTitle","listOfEmployees","emp","notActiveEmployees","emptyList","getEmployeesData","a","axios","get","data","Array","fill","el","i","String","fromCharCode","Employees","useState","setEmployeesData","setIsLoading","key","serializedState","localStorage","getItem","JSON","parse","error","console","log","loadActiveEmployees","setActiveEmployees","setEmployeesBirthdayData","useEffect","fetchData","employees","employeesObj","Object","fromEntries","employeesBdObj","forEach","charAt","toUpperCase","push","date","Date","sort","emp1","emp2","setItem","stringify","saveActiveEmployees","event","target","prev","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a7f1ce2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeEmployee\":\"styles_activeEmployee__1h3no\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesSection\":\"Employees_employeesSection__6kQgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeName\":\"styles_employeeName__EMoor\",\"radioWrapper\":\"styles_radioWrapper__1C0jW\",\"radioLabel\":\"styles_radioLabel__3TDOH\",\"radioSpan\":\"styles_radioSpan__12Ico\",\"notActiveEmployee\":\"styles_notActiveEmployee__iQpWu\",\"activeEmployee\":\"styles_activeEmployee__339nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesBirthdaySection\":\"styles_employeesBirthdaySection__1jtnp\",\"employeesBirthdayTitle\":\"styles_employeesBirthdayTitle__3FmeX\",\"listOfMonth\":\"styles_listOfMonth__2cDJt\",\"monthItem\":\"styles_monthItem__3gfI8\",\"monthTitle\":\"styles_monthTitle__9k24o\",\"listOfEmployees\":\"styles_listOfEmployees__1gg7z\",\"notActiveEmployees\":\"styles_notActiveEmployees__2idJI\",\"emptyList\":\"styles_emptyList__3U9OX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesSection\":\"styles_employeesSection__ni3A4\",\"employeesTitle\":\"styles_employeesTitle__lwNKk\",\"employeesContainer\":\"styles_employeesContainer__29nlW\",\"letter\":\"styles_letter__1cdnr\",\"noEmployees\":\"styles_noEmployees__1eiRE\"};","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Employee = ({\n  employee,\n  activeEmployees,\n  handleRadioButton,\n  radioEnum,\n}) => {\n  return (\n    <li>\n      <h4\n        className={`${styles.employeeName}\n        ${\n          activeEmployees.includes(employee.id)\n            ? styles.activeEmployee\n            : styles.notActiveEmployee\n        }`}\n      >\n        {`${employee.firstName} ${employee.lastName}`}\n      </h4>\n      <div className={styles.radioWrapper}>\n        <label className={styles.radioLabel}>\n          <input\n            type=\"radio\"\n            name={employee.id}\n            value={radioEnum.notActive}\n            checked={!activeEmployees.includes(employee.id)}\n            onChange={handleRadioButton}\n          />\n          <span>not active</span>\n        </label>\n      </div>\n      <div className={styles.radioWrapper}>\n        <label className={styles.radioLabel}>\n          <input\n            type=\"radio\"\n            name={employee.id}\n            value={radioEnum.active}\n            checked={activeEmployees.includes(employee.id)}\n            onChange={handleRadioButton}\n          />\n          <span className={styles.radioSpan}>active</span>\n        </label>\n      </div>\n    </li>\n  );\n};\n\nEmployee.propTypes = {\n  employee: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n  }),\n  employeesData: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n      })\n    )\n  ),\n  activeEmployees: PropTypes.array.isRequired,\n  handleRadioButton: PropTypes.func.isRequired,\n  radioEnum: PropTypes.shape({\n    notActive: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Employee;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport Employee from \"../Employee\";\nimport PropTypes from \"prop-types\";\n\nconst EmployeesGroupedByAlphabet = ({\n  letters,\n  isLoading,\n  employeesData,\n  activeEmployees,\n  handleRadioButton,\n  radioEnum,\n}) => {\n  return (\n    <div className={styles.employeesSection}>\n      <h2 className={styles.employeesTitle}>Employees</h2>\n      <ul className={styles.employeesContainer}>\n        {letters.map((letter) => (\n          <li className={styles.letter} key={letter}>\n            <h3>{letter}</h3>\n            <ul>\n              {isLoading || !employeesData[letter].length ? (\n                <li className={styles.noEmployees}>No Employees</li>\n              ) : (\n                employeesData[letter].map((employee) => (\n                  <Employee\n                    key={employee.id}\n                    employee={employee}\n                    activeEmployees={activeEmployees}\n                    handleRadioButton={handleRadioButton}\n                    radioEnum={radioEnum}\n                  />\n                ))\n              )}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nEmployeesGroupedByAlphabet.propTypes = {\n  letters: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  employeesData: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n      })\n    )\n  ),\n  activeEmployees: PropTypes.array.isRequired,\n  handleRadioButton: PropTypes.func.isRequired,\n  radioEnum: PropTypes.shape({\n    notActive: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n  }),\n};\n\nexport default EmployeesGroupedByAlphabet;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst EmployeeWithBirthday = ({ employee, months }) => {\n  return (\n    <li className={styles.activeEmployee}>{`${employee.firstName} ${\n      employee.lastName\n    } - ${employee.dob.getDate()} ${\n      months.find((m) => m.index === employee.dob.getMonth()).title\n    },  ${employee.dob.getFullYear()} year`}</li>\n  );\n};\n\nEmployeeWithBirthday.propTypes = {\n  employee: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    dob: PropTypes.instanceOf(Date),\n  }),\n  months: PropTypes.arrayOf(\n    PropTypes.shape({\n      index: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default EmployeeWithBirthday;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EmployeeWithBirthday from \"../EmployeeWithBirthday\";\nimport styles from \"./styles.module.css\";\n\nconst EmployeesBirthdayByMonth = ({\n  activeEmployees,\n  months,\n  isLoading,\n  employeesBirthdayData,\n}) => {\n  return (\n    <div className={styles.employeesBirthdaySection}>\n      <h2 className={styles.employeesBirthdayTitle}>Employees birthday</h2>\n      <ul className={styles.listOfMonth}>\n        {activeEmployees.length ? (\n          months.map((month) => (\n            <li key={month.index} className={styles.monthItem}>\n              <h3 className={styles.monthTitle}>{month.title}</h3>\n              <ul className={styles.listOfEmployees}>\n                {isLoading ||\n                !employeesBirthdayData[month.index].find((emp) =>\n                  activeEmployees.includes(emp.id)\n                ) ? (\n                  <li className={styles.notActiveEmployees}>No Employees</li>\n                ) : (\n                  employeesBirthdayData[month.index].map((employee) => {\n                    if (activeEmployees.includes(employee.id))\n                      return (\n                        <EmployeeWithBirthday\n                          key={employee.id}\n                          employee={employee}\n                          months={months}\n                        />\n                      );\n                    return null;\n                  })\n                )}\n              </ul>\n            </li>\n          ))\n        ) : (\n          <li className={styles.emptyList}>Employees List is empty</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nEmployeesBirthdayByMonth.propTypes = {\n  activeEmployees: PropTypes.array.isRequired,\n  months: PropTypes.arrayOf(\n    PropTypes.shape({\n      index: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  isLoading: PropTypes.bool.isRequired,\n  employeesBirthdayData: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        dob: PropTypes.instanceOf(Date),\n      })\n    )\n  ),\n};\n\nexport default EmployeesBirthdayByMonth;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  saveActiveEmployees,\n  loadActiveEmployees,\n} from \"../utils/localStorage\";\nimport EmployeesGroupedByAlphabet from \"../Components/EmployeesGroupedByAlphabet\";\nimport EmployeesBirthdayByMonth from \"../Components/EmployeesBirthdayByMonth\";\nimport styles from \"../styles/Employees.module.css\";\n\nconst radioEnum = {\n  notActive: \"0\",\n  active: \"1\",\n};\nconst months = [\n  { index: 0, title: \"January\" },\n  { index: 1, title: \"February\" },\n  { index: 2, title: \"March\" },\n  { index: 3, title: \"April\" },\n  { index: 4, title: \"May\" },\n  { index: 5, title: \"June\" },\n  { index: 6, title: \"July\" },\n  { index: 7, title: \"August\" },\n  { index: 8, title: \"September\" },\n  { index: 9, title: \"October\" },\n  { index: 10, title: \"November\" },\n  { index: 11, title: \"December\" },\n];\n\nconst getEmployeesData = async () => {\n  return (\n    await axios.get(\n      \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\n    )\n  ).data;\n};\n\nconst letters = Array(26)\n  .fill(0)\n  .map((el, i) => String.fromCharCode(65 + i));\n\nconst Employees = () => {\n  const [employeesData, setEmployeesData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeEmployees, setActiveEmployees] = useState(\n    loadActiveEmployees(\"activeEmployees\")\n  );\n  const [employeesBirthdayData, setEmployeesBirthdayData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const employees = await getEmployeesData();\n      const employeesObj = Object.fromEntries(\n        letters.map((letter) => [letter, []])\n      );\n      const employeesBdObj = Object.fromEntries(\n        months.map((month) => [month.index, []])\n      );\n      employees.forEach((employee) => {\n        employeesObj[employee.firstName.charAt(0).toUpperCase()].push({\n          id: employee.id,\n          firstName: employee.firstName,\n          lastName: employee.lastName,\n        });\n      });\n\n      employees.forEach((employee) => {\n        const date = new Date(employee.dob);\n        employeesBdObj[date.getMonth()].push({\n          id: employee.id,\n          firstName: employee.firstName,\n          lastName: employee.lastName,\n          dob: date,\n        });\n      });\n\n      letters.forEach((letter) =>\n        employeesObj[letter].sort((emp1, emp2) =>\n          emp1.firstName < emp2.firstName ? -1 : 1\n        )\n      );\n\n      months.forEach((month) =>\n        employeesBdObj[month.index].sort((emp1, emp2) =>\n          emp1.lastName < emp2.lastName ? -1 : 1\n        )\n      );\n      setEmployeesData(employeesObj);\n      setEmployeesBirthdayData(employeesBdObj);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    saveActiveEmployees(\"activeEmployees\", activeEmployees);\n  }, [activeEmployees]);\n\n  const handleRadioButton = (event) => {\n    const employeeName = event.target.name;\n    if (event.target.value === radioEnum.active) {\n      setActiveEmployees((prev) => [...prev, employeeName]);\n    } else {\n      setActiveEmployees((prev) =>\n        prev.filter((employee) => employee !== employeeName)\n      );\n    }\n  };\n\n  return (\n    <div className={styles.employeesSection}>\n      <EmployeesGroupedByAlphabet\n        letters={letters}\n        isLoading={isLoading}\n        employeesData={employeesData}\n        activeEmployees={activeEmployees}\n        handleRadioButton={handleRadioButton}\n        radioEnum={radioEnum}\n      />\n      <EmployeesBirthdayByMonth\n        activeEmployees={activeEmployees}\n        months={months}\n        isLoading={isLoading}\n        employeesBirthdayData={employeesBirthdayData}\n      />\n    </div>\n  );\n};\n\nexport default Employees;\n","export const saveActiveEmployees = (key, activeEmployees) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(activeEmployees));\n  } catch (error) {\n    console.log(\"Save local storage error: \", error);\n  }\n};\n\nexport const loadActiveEmployees = (key) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? [] : JSON.parse(serializedState);\n  } catch (error) {\n    console.log(\"Load error: \", error);\n  }\n};\n","import React from \"react\";\nimport Employees from \"./Pages/Employees\";\n\nconst App = () => {\n  return (\n    <div>\n      <Employees />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}